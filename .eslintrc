{
  "extends": [
    "next",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "env": {
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "eslint-plugin-import-helpers",
    "@typescript-eslint"
  ],
  "rules": {
    // Possible Problems
    "array-callback-return": [
      "error",
      {
        "allowImplicit": true,
        "checkForEach": false
      }
    ],
    "constructor-super": "error",
    "for-direction": "error",
    "getter-return": [
      "error",
      {
        "allowImplicit": false
      }
    ],
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    // "no-constant-binary-expression": "error", // TODO: fix this
    "no-constant-condition": "error",
    "no-constructor-return": "error",
    "no-control-regex": "off",
    "no-debugger": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-ex-assign": "error",
    "no-fallthrough": "error", // TODO: add options
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error", // TODO: add options
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": [
      "error",
      {
        "skipStrings": false,
        "skipComments": false,
        "skipRegExps": false,
        "skipTemplates": false
        //"skipJSXText": false // TODO: update linter and enable option
      }
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    //"no-new-native-nonconstructor": "error", // TODO: fix this
    "no-new-symbol": "error",
    "no-obj-calls": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-self-assign": [
      "error",
      {
        "props": true
      }
    ],
    "no-self-compare": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-undef": "error",
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": [
      "error",
      {
        "enforceForOrderingRelations": true
      }
    ],
    "no-unsafe-optional-chaining": [
      "error",
      {
        "disallowArithmeticOperators": true
      }
    ],
    // "no-unused-private-class-members": "error", // TODO: fix
    "no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "all",
        "ignoreRestSiblings": false
      }
    ],
    "no-use-before-define": [
      "error",
      {
        "functions": true,
        "classes": true,
        "variables": true
        // "allowNamedExports": false // TODO: fix
      }
    ],
    "no-useless-backreference": "error",
    "require-atomic-updates": "error", /*[
      "error",
      {
        "allowProperties": false
      }
    ],*/ // TODO: fix
    "use-isnan": [
      "error",
      {
        "enforceForSwitchCase": true,
        "enforceForIndexOf": true
      }
    ],
    "valid-typeof": "error",
    // dooown
    //"@typescript-eslint/no-var-requires": "error", // TODO: delete
    // Suggestions
    "accessor-pairs": [
      "error",
      {
        "setWithoutGet": true,
        "getWithoutSet": true,
        "enforceForClassMembers": true
      }
    ],
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "block-scoped-var": "error",
    "capitalized-comments": [
      "error",
      "always",
      {
        "ignoreInlineComments": false,
        "ignoreConsecutiveComments": false
      }
    ],
    "class-methods-use-this": "off",
    "complexity": [
      "warn",
      {
        "max": 10
      }
    ],
    "consistent-return": [
      "error",
      {
        "treatUndefinedAsUnspecified": true
      }
    ],
    "consistent-this": "error",
    "curly": [
      "error",
      "all"
    ],
    "default-case": [
      "error",
      {
        "commentPattern": "^skip\\sdefault"
      }
    ],
    "default-case-last": "error",
    "default-param-last": "error",
    "dot-notation": "error",
    "eqeqeq": [
      "error",
      "always"
    ],
    "func-name-matching": [
      "error",
      "always",
      {
        "considerPropertyDescriptor": false,
        "includeCommonJSModuleExports": true
      }
    ],
    "func-names": [
      "error",
      "always"
    ],
    "func-style": [
      "error",
      "expression"
    ],
    "grouped-accessor-pairs": [
      "error"
      /*{
        "setBeforeGet": true
      }*/ // TODO: fix
    ],
    "guard-for-in": "error",
    // "id-denylist": _
    // "id-length": _
    // "id-match": _
    "init-declarations": "off",
    /*"logical-assignment-operators": [
      "error",
      "always",
      {
        "enforceForIfStatements": true
      }
    ],*/ // TODO: fix
    "max-classes-per-file": [
      "error",
      1
    ],
    "max-depth": [
      "error",
      4
    ],
    "max-lines": [
      "error",
      500
    ],
    "max-lines-per-function": "off",
    "max-nested-callbacks": "off",
    "max-params": "off",
    "max-statements": "off",
    "multiline-comment-style": "error",
    "new-cap": "off",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-confusing-arrow": "error",
    "no-console": "off",
    "no-continue": "off",
    "no-delete-var": "error",
    "no-div-regex": "error",
    "no-empty": "error",
    "no-empty-function": "error",
    // "no-empty-static-block": "error", TODO: fix
    "no-eq-null": "off", // We use the more powerful "eqeqeq" rule.
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": [
      "error",
      {
        "enforceForLogicalOperands": true
      }
    ],
    "no-extra-label": "error",
    "no-extra-semi": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "off",
    "no-implied-eval": "error",
    "no-inline-comments": "off",
    "no-invalid-this": "error",
    "no-iterator": "error",
    "no-label-var": "off", // We use the "no-labels" rule.
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "off",
    "no-loop-func": "error",
    "no-magic-numbers": "off",
    "no-mixed-operators": "error",
    "no-multi-assign": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": [
      "error",
      {
        "props": true,
        "ignorePropertyModificationsFor": [
          "state"
        ]
      }
    ],
    "no-plusplus": "off",
    "no-proto": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-exports": "off",
    "no-restricted-globals": "off",
    "no-restricted-imports": "off",
    "no-restricted-properties": "off",
    "no-restricted-syntax": "off",
    "no-return-assign": [
      "error",
      "always"
    ],
    "no-return-await": "off",
    "no-script-url": "error",
    "no-sequences": "error",
    "no-shadow-restricted-names": "error",
    "no-ternary": "off",
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-undefined": "error",
    "no-unneeded-ternary": "error",
    "no-unused-expressions": "error",
    "no-unused-labels": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-computed-key": [
      "error",
      {
        "enforceForClassMembers": true
      }
    ],
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": "off",
    "no-with": "error",
    "object-shorthand": [
      "error",
      "always"
    ],
    "one-var": "off",
    "one-var-declaration-per-line": [
      "error",
      "always"
    ],
    "operator-assignment": [
      "error",
      "always"
    ],
    "prefer-arrow-callback": "off",
    "prefer-const": [
      "error",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true
      }
    ],
    "prefer-destructuring": "error",
    "prefer-exponentiation-operator": "error",
    "prefer-named-capture-group": "error",
    "prefer-numeric-literals": "error",
    // "prefer-object-has-own": "error", // TODO: fix
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-regex-literals": [
      "error",
      {
        "disallowRedundantWrapping": true
      }
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "quote-props": [
      "error",
      "as-needed"
    ],
    "radix": [
      "error",
      "always"
    ],
    "require-await": "error",
    "require-unicode-regexp": "error",
    "require-yield": "error",
    "sort-imports": "off", // We use "import-helpers".
    "sort-keys": "off",
    "sort-vars": "error",
    "spaced-comment": "error",
    "strict": "error",
    "symbol-description": "error",
    "vars-on-top": "off",
    "yoda": "error",
    // EsLint: Layout & Formatting
    "array-bracket-newline": "off",
    "array-bracket-spacing": "error",
    "array-element-newline": "off",
    "arrow-parens": "error",
    "arrow-spacing": "error",
    "block-spacing": "error",
    "brace-style": "error",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": "error",
    "dot-location": "error",
    "eol-last": "error",
    "func-call-spacing": "error",
    "function-call-argument-newline": "off",
    "function-paren-newline": [
      "error",
      { "minItems": 3 }
    ],
    "generator-star-spacing": "error",
    "implicit-arrow-linebreak": "error",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "jsx-quotes": "error",
    "key-spacing": "error",
    "keyword-spacing": "error",
    "line-comment-position": "off",
    "linebreak-style": "error",
    "lines-around-comment": "off",
    "lines-between-class-members": "error",
    "max-len": "off",
    "max-statements-per-line": "off",
    "multiline-ternary": "off",
    "new-parens": "error",
    "newline-per-chained-call": "error",
    "no-extra-parens": "off", // Produces some bugs when casting types using "any".
    "no-mixed-spaces-and-tabs": "off", // We use "no-tabs".
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1
      }
    ],
    "no-tabs": "error",
    "no-trailing-spaces": "error",
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": "error",
    "object-curly-newline": "off",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "object-property-newline": "error",
    "operator-linebreak": "off",
    "padded-blocks": [
      "error",
      "never"
    ],
    "padding-line-between-statements": "off",
    "quotes": [
      "error",
      "single"
    ],
    "rest-spread-spacing": "error",
    "semi": "off",
    "semi-spacing": "error",
    "semi-style": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "switch-colon-spacing": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": "error",
    "unicode-bom": "error",
    "wrap-iife": "error",
    "wrap-regex": "error",
    "yield-star-spacing": "error",
    //
    "import-helpers/order-imports": [
      "error",
      {
        "alphabetize": {
          "ignoreCase": true,
          "order": "asc"
        },
        "groups": [
          "/^react/",
          "module",
          [
            "parent",
            "sibling",
            "index"
          ]
        ],
        "newlinesBetween": "always"
      }
    ],
    // Cleanup
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "react/destructuring-assignment": [
      "warn",
      "always",
      {
        "ignoreClassFields": true
      }
    ],
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/react-in-jsx-scope": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-extraneous-dependencies": [
      "off"
    ],
    // other rules
    "@next/next/no-img-element": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ],
        "leadingUnderscore": "allow"
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
